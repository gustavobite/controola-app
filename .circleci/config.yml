version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-27-alpha

    working_directory: ~/controola-app

    environment:
      JVM_OPTS: -Xmx3200m
      CIRCLE_JDK_VERSION: oraclejdk8

    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true

      - run:
          name: Decrypt release key
          command: openssl aes-256-cbc -d -in distribution/release.keystore-cipher -out distribution/release.keystore -md sha256 -k $CIPHER_DECRYPT_KEY

      - run:
          name: Setup Google Services JSON
          command: |
            mkdir -p app/src/debug/ && touch app/src/debug/google-services.json
            echo "${JSON_FIREBASE_DEVELOPMENT}" >> "app/src/debug/google-services.json"
            mkdir -p app/src/release/ && touch app/src/release/google-services.json
            echo "${JSON_FIREBASE_RELEASE}" >> "app/src/release/google-services.json"
      - run:
          name: Run Linters
          command: ./gradlew check

      - run:
          name: Run Tests and generate Code Coverage
          command: ./gradlew createCombinedCoverageReport

      - run:
          name: Upload code coverage data
          command: ./gradlew coveralls

      - run:
          name: Build
          command: ./gradlew assemble assembleAndroidTest

      - store_artifacts:
          path: app/build/reports/jacoco/createCombinedCoverageReport
          destination: coverage-report

      - store_artifacts:
          path: app/build/reports/tests/testDebugUnitTest
          destination: local-test-report

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}